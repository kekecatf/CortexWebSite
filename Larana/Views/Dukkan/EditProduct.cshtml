@model Larana.Models.Product

@{
    ViewBag.Title = "Ürün Düzenle";
}

<div class="container mt-4">
    <div class="product-edit-header">
        <h2>Ürün Düzenle - @Model.Name</h2>
        <p>Mağaza: @ViewBag.DukkanName</p>
    </div>

    @using (Html.BeginForm("EditProduct", "Dukkan", new { id = ViewBag.DukkanId, productId = Model.Id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.DukkanId)
        @Html.HiddenFor(model => model.Sales)
        @Html.HiddenFor(model => model.DisplayOrder)

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Name, "Ürün Adı", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, "Ürün Açıklaması", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "6", required = "required", placeholder = "Ürün özellikleri, boyutları, kullanımı ve diğer önemli bilgileri buraya giriniz." })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    <small class="form-text text-muted">Detaylı bir ürün açıklaması, müşterilerin satın alma kararını olumlu etkiler.</small>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Brand, "Marka", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (ViewBag.Brands != null)
                    {
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.Brand, ViewBag.Brands as SelectList, "-- Marka Seçin --", new { @class = "form-control", id = "brandDropdown" })
                            <div class="input-group-append">
                                <button type="button" class="btn btn-outline-secondary" id="newBrandBtn">Yeni Marka</button>
                            </div>
                        </div>
                        <div id="newBrandInput" style="display: none; margin-top: 10px;">
                            <input type="text" id="brandInput" class="form-control" placeholder="Yeni marka adını girin" />
                            <button type="button" class="btn btn-sm btn-primary mt-2" id="saveBrandBtn">Bu Markayı Kullan</button>
                        </div>
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Marka adını girin" } })
                    }
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, "Kategori", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (ViewBag.Categories != null)
                    {
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.Category, ViewBag.Categories as SelectList, "-- Kategori Seçin --", new { @class = "form-control", id = "categoryDropdown" })
                            <div class="input-group-append">
                                <button type="button" class="btn btn-outline-secondary" id="newCategoryBtn">Yeni Kategori</button>
                            </div>
                        </div>
                        <div id="newCategoryInput" style="display: none; margin-top: 10px;">
                            <input type="text" id="categoryInput" class="form-control" placeholder="Yeni kategori adını girin" />
                            <button type="button" class="btn btn-sm btn-primary mt-2" id="saveCategoryBtn">Bu Kategoriyi Kullan</button>
                        </div>
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", placeholder = "Kategori adını girin" } })
                    }
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, "Fiyat", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", min = "0.01", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock, "Stok", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.IsActive) Aktif (Müşteriler tarafından görülebilir)
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.IsClickAndCollect) Tıkla ve Topla seçeneği mevcut
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Mevcut Görsel</label>
                <div class="col-md-10">
                    @if (!string.IsNullOrEmpty(Model.PhotoPath))
                    {
                        <img src="@Model.PhotoPath" alt="@Model.Name" style="max-width: 200px; max-height: 200px;" class="img-thumbnail mb-2" />
                    }
                    else
                    {
                        <p class="text-muted">Görsel mevcut değil</p>
                    }
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Görsel Değiştir</label>
                <div class="col-md-10">
                    <input type="file" name="productImage" id="productImage" class="form-control-file" />
                    <small class="form-text text-muted">Yeni bir fotoğraf yükleyin (isteğe bağlı)</small>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Değişiklikleri Kaydet" class="btn btn-primary" />
                    <a href="/Dukkan/Products/@ViewBag.DukkanId" class="btn btn-secondary">Ürünlere Dön</a>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .product-edit-header {
        margin-bottom: 20px;
    }

    .product-edit-header h2 {
        color: #007BFF;
        margin-bottom: 5px;
    }

    .product-edit-header p {
        color: #666;
        font-size: 16px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .control-label {
        font-weight: 600;
        color: #444;
    }

    .btn-primary {
        margin-right: 10px;
    }
    
    .input-group-append {
        display: flex;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        $(document).ready(function() {
            // Marka işlemleri
            $("#newBrandBtn").click(function() {
                $("#newBrandInput").toggle();
            });
            
            $("#saveBrandBtn").click(function() {
                var newBrand = $("#brandInput").val().trim();
                if (newBrand) {
                    $("#Brand").val(newBrand);
                    $("#newBrandInput").hide();
                }
            });
            
            // Kategori işlemleri
            $("#newCategoryBtn").click(function() {
                $("#newCategoryInput").toggle();
            });
            
            $("#saveCategoryBtn").click(function() {
                var newCategory = $("#categoryInput").val().trim();
                if (newCategory) {
                    $("#Category").val(newCategory);
                    $("#newCategoryInput").hide();
                }
            });
        });
    </script>
} 