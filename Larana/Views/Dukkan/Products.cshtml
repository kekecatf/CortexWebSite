@model Larana.Models.Dukkan

@{
    ViewBag.Title = "Ürünleri Yönet - " + Model.Name;
}

<div class="container">
    <div class="store-header">
        <h1>Ürünleri Yönet - @Model.Name</h1>
        <div class="store-actions">
            <a href="@Url.Action("AddProduct", "Dukkan", new { id = Model.Id })" class="btn btn-success">
                <i class="fas fa-plus"></i> Yeni Ürün Ekle
            </a>
            <a href="@Url.Action("AddProductFromOthers", "Dukkan", new { id = Model.Id })" class="btn btn-success ml-2">
                <i class="fas fa-clone"></i> Mevcut Ürünleri Ekle
            </a>
            <a href="@Url.Action("Details", "Dukkan", new { id = Model.Id })" class="btn btn-primary">
                <i class="fas fa-store"></i> Mağazaya Dön
            </a>
        </div>
    </div>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-info">
            @TempData["Message"]
        </div>
    }

    <div class="products-section">
        <div class="product-filters">
            <select id="category-filter" class="form-control">
                <option value="">Tüm Kategoriler</option>
                @foreach (var category in Model.Products.Select(p => p.Category).Distinct())
                {
                    <option value="@category">@category</option>
                }
            </select>
            <select id="availability-filter" class="form-control">
                <option value="">Tüm Ürünler</option>
                <option value="in-stock">Stokta</option>
                <option value="out-of-stock">Stokta Yok</option>
            </select>
            <select id="sort-order" class="form-control">
                <option value="name">İsim</option>
                <option value="price-asc">Fiyat (Düşükten Yükseğe)</option>
                <option value="price-desc">Fiyat (Yüksekten Düşüğe)</option>
                <option value="sales">Satışlar</option>
            </select>
        </div>

        <div class="row product-grid">
            @foreach (var product in Model.Products)
            {
                <div class="col-md-4 mb-4 product-card" 
                     data-category="@product.Category"
                     data-stock="@(product.Stock > 0 ? "in-stock" : "out-of-stock")"
                     data-name="@product.Name"
                     data-price="@product.Price"
                     data-sales="@product.Sales">
                    <div class="card h-100">
                        @if (!string.IsNullOrEmpty(product.PhotoPath))
                        {
                            <img src="@product.PhotoPath" class="card-img-top" alt="@product.Name">
                        }
                        else
                        {
                            <img src="~/Content/Images/no-image.png" class="card-img-top" alt="Resim Yok">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p class="card-text">
                                <strong>Fiyat:</strong> @product.Price.ToString("F2") TL
                            </p>
                            <p class="card-text">
                                <strong>Stok:</strong> @product.Stock
                            </p>
                            <p class="card-text">
                                <strong>Satışlar:</strong> @product.Sales
                            </p>
                            <div class="product-actions">
                                <a href="@Url.Action("EditProduct", "Dukkan", new { id = Model.Id, productId = product.Id })" class="btn btn-warning">
                                    <i class="fas fa-edit"></i> Düzenle
                                </a>
                                <button type="button" class="btn btn-danger" 
                                        onclick="deleteProduct(@product.Id, @Model.Id)">
                                    <i class="fas fa-trash"></i> Sil
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            
            @* Display products from other stores (via ShopProducts) *@
            @if (ViewBag.ShopProducts != null)
            {
                foreach (var shopProduct in ViewBag.ShopProducts)
                {
                    var product = shopProduct.Product;
                    <div class="col-md-4 mb-4 product-card" 
                         data-category="@product.Category"
                         data-stock="@(shopProduct.Stock > 0 ? "in-stock" : "out-of-stock")"
                         data-name="@product.Name"
                         data-price="@shopProduct.Price"
                         data-sales="@product.Sales">
                        <div class="card h-100 shop-product-card">
                            <div class="added-badge">Başka Mağazadan Eklendi</div>
                            @if (!string.IsNullOrEmpty(product.PhotoPath))
                            {
                                <img src="@product.PhotoPath" class="card-img-top" alt="@product.Name">
                            }
                            else
                            {
                                <img src="~/Content/Images/no-image.png" class="card-img-top" alt="Resim Yok">
                            }
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text">@product.Description</p>
                                <p class="card-text">
                                    <strong>Sizin Fiyatınız:</strong> @shopProduct.Price.ToString("F2") TL
                                </p>
                                <p class="card-text">
                                    <strong>Orijinal Fiyat:</strong> @product.Price.ToString("F2") TL
                                </p>
                                <p class="card-text">
                                    <strong>Sizin Stoğunuz:</strong> @shopProduct.Stock
                                </p>
                                <p class="card-text">
                                    <strong>Orijinal Mağaza:</strong> @(product.Dukkan != null ? product.Dukkan.Name : "Bilinmiyor")
                                </p>
                                <div class="product-actions">
                                    <button type="button" class="btn btn-warning" 
                                            onclick="editShopProduct(@shopProduct.Id, @Model.Id)">
                                        <i class="fas fa-edit"></i> Düzenle
                                    </button>
                                    <button type="button" class="btn btn-danger" 
                                            onclick="removeShopProduct(@shopProduct.Id, @Model.Id)">
                                        <i class="fas fa-trash"></i> Kaldır
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<style>
    .store-header {
        background-color: #f8f9fa;
        padding: 2rem;
        margin-bottom: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .store-actions {
        margin-top: 1rem;
    }

    .store-actions .btn {
        margin-right: 0.5rem;
    }

    .product-filters {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
        flex-wrap: wrap;
    }

    .form-control {
        min-width: 200px;
    }

    .product-card {
        transition: transform 0.2s;
    }

    .product-card:hover {
        transform: translateY(-5px);
    }

    .card {
        height: 100%;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .card:hover {
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .card-img-top {
        height: 200px;
        object-fit: cover;
    }

    .product-actions {
        display: flex;
        gap: 0.5rem;
        margin-top: 1rem;
    }

    .btn i {
        margin-right: 0.5rem;
    }
    
    /* Başka mağazalardan eklenen ürünler için stil */
    .shop-product-card {
        border: 2px dashed #007bff;
        position: relative;
    }
    
    .added-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #007bff;
        color: white;
        padding: 3px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: bold;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            function filterProducts() {
                const category = $('#category-filter').val();
                const availability = $('#availability-filter').val();
                const sortOrder = $('#sort-order').val();

                $('.product-card').each(function() {
                    const $card = $(this);
                    const cardCategory = $card.data('category');
                    const cardStock = $card.data('stock');
                    
                    const categoryMatch = !category || cardCategory === category;
                    const availabilityMatch = !availability || cardStock === availability;
                    
                    $card.toggle(categoryMatch && availabilityMatch);
                });

                // Ürünleri sırala
                const $productGrid = $('.product-grid');
                const $products = $('.product-card').toArray();

                $products.sort(function(a, b) {
                    const $a = $(a);
                    const $b = $(b);

                    switch(sortOrder) {
                        case 'name':
                            return $a.data('name').localeCompare($b.data('name'));
                        case 'price-asc':
                            return $a.data('price') - $b.data('price');
                        case 'price-desc':
                            return $b.data('price') - $a.data('price');
                        case 'sales':
                            return $b.data('sales') - $a.data('sales');
                        default:
                            return 0;
                    }
                });

                $productGrid.append($products);
            }

            $('#category-filter, #availability-filter, #sort-order').on('change', filterProducts);
            
            // Ürün silme fonksiyonu
            window.deleteProduct = function(productId, dukkanId) {
                if (confirm('Bu ürünü silmek istediğinize emin misiniz?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteProduct", "Dukkan")',
                        type: 'POST',
                        data: {
                            productId: productId,
                            dukkanId: dukkanId
                        },
                        success: function(response) {
                            if (response.success) {
                                // Değişiklikleri yansıtmak için sayfayı yenile
                                location.reload();
                            } else {
                                alert('Hata: ' + response.message);
                            }
                        },
                        error: function() {
                            alert('Ürün silinirken bir hata oluştu');
                        }
                    });
                }
            }
            
            // Ürünü bu mağazadan kaldırma fonksiyonu (orijinal ürünü silmeden)
            window.removeShopProduct = function(shopProductId, dukkanId) {
                if (confirm('Bu ürünü mağazanızdan kaldırmak istediğinize emin misiniz? Bu işlem orijinal ürünü silmeyecektir.')) {
                    $.ajax({
                        url: '@Url.Action("RemoveShopProduct", "Dukkan")',
                        type: 'POST',
                        data: {
                            shopProductId: shopProductId,
                            dukkanId: dukkanId
                        },
                        success: function(response) {
                            if (response.success) {
                                // Değişiklikleri yansıtmak için sayfayı yenile
                                location.reload();
                            } else {
                                alert('Hata: ' + response.message);
                            }
                        },
                        error: function() {
                            alert('Ürün kaldırılırken bir hata oluştu');
                        }
                    });
                }
            }
            
            // Mağaza ürününü düzenleme fonksiyonu
            window.editShopProduct = function(shopProductId, dukkanId) {
                // Şimdilik basit bir prompt tabanlı düzenleme uygulayacağız
                const newPrice = prompt('Yeni fiyat girin:');
                const newStock = prompt('Yeni stok miktarı girin:');
                
                if (newPrice && newStock) {
                    $.ajax({
                        url: '@Url.Action("EditShopProduct", "Dukkan")',
                        type: 'POST',
                        data: {
                            shopProductId: shopProductId,
                            dukkanId: dukkanId,
                            price: newPrice,
                            stock: newStock
                        },
                        success: function(response) {
                            if (response.success) {
                                // Değişiklikleri yansıtmak için sayfayı yenile
                                location.reload();
                            } else {
                                alert('Hata: ' + response.message);
                            }
                        },
                        error: function() {
                            alert('Ürün güncellenirken bir hata oluştu');
                        }
                    });
                }
            }
        });
    </script>
} 