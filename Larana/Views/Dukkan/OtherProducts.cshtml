@model List<Larana.Models.ShopProduct>

@{
    ViewBag.Title = "Products Added From Other Stores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="mb-0">Products Added From Other Stores</h2>
                <a href="@Url.Action("ManageProducts", "Dukkan", new { id = ViewBag.DukkanId })" class="btn btn-light">
                    <i class="fas fa-arrow-left me-2"></i> Back to Manage Products
                </a>
            </div>
        </div>
        <div class="card-body">
            <div class="alert alert-info">
                <strong>Store: @ViewBag.DukkanName</strong>
                <p>Here you can manage all products that you've added from other stores.</p>
            </div>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="card mt-4">
            <div class="card-header bg-info text-white">
                <h3 class="mb-0">Products From Other Stores (@Model.Count)</h3>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Original Store</th>
                                <th>Your Price</th>
                                <th>Your Stock</th>
                                <th width="300">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr data-id="@item.Id">
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (item.Product != null && !string.IsNullOrEmpty(item.Product.PhotoPath))
                                            {
                                                <img src="@item.Product.PhotoPath" alt="@item.Product.Name" class="img-thumbnail me-2" style="width: 50px; height: 50px; object-fit: cover;" />
                                            }
                                            else
                                            {
                                                <img src="~/Content/Images/placeholder-product.png" alt="No Image" class="img-thumbnail me-2" style="width: 50px; height: 50px; object-fit: cover;" />
                                            }
                                            <div>
                                                <strong>@(item.Product?.Name ?? "Unknown Product")</strong>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (item.Product?.Dukkan != null)
                                        {
                                            <a href="@Url.Action("Details", "Dukkan", new { id = item.Product.DukkanId })">
                                                @item.Product.Dukkan.Name
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-warning">Unknown</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="price-display">$@item.Price.ToString("0.00")</span>
                                        <div class="price-edit" style="display:none">
                                            <div class="input-group input-group-sm">
                                                <span class="input-group-text">$</span>
                                                <input type="number" class="form-control price-input" value="@item.Price" min="0.01" step="0.01" />
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="stock-display">@item.Stock</span>
                                        <div class="stock-edit" style="display:none">
                                            <input type="number" class="form-control form-control-sm stock-input" value="@item.Stock" min="0" />
                                        </div>
                                    </td>
                                    <td>
                                        <div class="btn-group action-buttons">
                                            <button type="button" class="btn btn-primary btn-edit">
                                                <i class="fas fa-edit"></i> Edit
                                            </button>
                                            <button type="button" class="btn btn-danger btn-remove" data-name="@(item.Product?.Name ?? "Unknown")">
                                                <i class="fas fa-trash-alt"></i> Remove
                                            </button>
                                        </div>
                                        <div class="btn-group save-cancel-buttons" style="display:none">
                                            <button type="button" class="btn btn-success btn-save">
                                                <i class="fas fa-save"></i> Save
                                            </button>
                                            <button type="button" class="btn btn-secondary btn-cancel">
                                                <i class="fas fa-times"></i> Cancel
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card mt-4">
            <div class="card-body text-center py-5">
                <i class="fas fa-store fa-4x text-muted mb-3"></i>
                <h3>No Products From Other Stores</h3>
                <p class="text-muted">You haven't added any products from other stores yet.</p>
                <a href="@Url.Action("ExistingProducts", "Dukkan", new { dukkanId = ViewBag.DukkanId })" class="btn btn-primary mt-2">
                    <i class="fas fa-plus"></i> Add Products From Other Stores
                </a>
            </div>
        </div>
    }
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // Edit button click
            $('.btn-edit').click(function() {
                var $row = $(this).closest('tr');
                
                // Hide display elements, show edit elements
                $row.find('.price-display, .stock-display').hide();
                $row.find('.price-edit, .stock-edit').show();
                
                // Hide action buttons, show save/cancel buttons
                $row.find('.action-buttons').hide();
                $row.find('.save-cancel-buttons').show();
            });
            
            // Cancel button click
            $('.btn-cancel').click(function() {
                var $row = $(this).closest('tr');
                
                // Show display elements, hide edit elements
                $row.find('.price-display, .stock-display').show();
                $row.find('.price-edit, .stock-edit').hide();
                
                // Show action buttons, hide save/cancel buttons
                $row.find('.action-buttons').show();
                $row.find('.save-cancel-buttons').hide();
                
                // Reset input values to original
                var originalPrice = $row.find('.price-display').text().replace('$', '');
                var originalStock = $row.find('.stock-display').text();
                
                $row.find('.price-input').val(originalPrice);
                $row.find('.stock-input').val(originalStock);
            });
            
            // Save button click
            $('.btn-save').click(function() {
                var $row = $(this).closest('tr');
                var shopProductId = $row.data('id');
                var newPrice = $row.find('.price-input').val();
                var newStock = $row.find('.stock-input').val();
                
                // Disable buttons and add spinner
                var $saveBtn = $(this);
                $saveBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Saving...');
                $row.find('.btn-cancel').prop('disabled', true);
                
                // Make AJAX call to update
                $.ajax({
                    url: '@Url.Action("UpdateShopProduct", "Dukkan")',
                    type: 'POST',
                    data: {
                        shopProductId: shopProductId,
                        price: newPrice,
                        stock: newStock,
                        dukkanId: @ViewBag.DukkanId
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update displayed values
                            $row.find('.price-display').text('$' + parseFloat(newPrice).toFixed(2));
                            $row.find('.stock-display').text(newStock);
                            
                            // Show success message
                            showToast('Success', 'Product updated successfully', 'success');
                            
                            // Reset display
                            $row.find('.price-display, .stock-display').show();
                            $row.find('.price-edit, .stock-edit').hide();
                            $row.find('.action-buttons').show();
                            $row.find('.save-cancel-buttons').hide();
                        } else {
                            showToast('Error', response.message || 'Failed to update product', 'danger');
                            // Re-enable buttons
                            $saveBtn.prop('disabled', false).html('<i class="fas fa-save"></i> Save');
                            $row.find('.btn-cancel').prop('disabled', false);
                        }
                    },
                    error: function() {
                        showToast('Error', 'An error occurred while updating the product', 'danger');
                        // Re-enable buttons
                        $saveBtn.prop('disabled', false).html('<i class="fas fa-save"></i> Save');
                        $row.find('.btn-cancel').prop('disabled', false);
                    }
                });
            });
            
            // Remove button click
            $('.btn-remove').click(function() {
                var $row = $(this).closest('tr');
                var shopProductId = $row.data('id');
                var productName = $(this).data('name');
                
                if (confirm('Are you sure you want to remove "' + productName + '" from your store?')) {
                    // Disable button and add spinner
                    var $removeBtn = $(this);
                    $removeBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Removing...');
                    
                    // Make AJAX call to remove
                    $.ajax({
                        url: '@Url.Action("RemoveShopProductAsync", "Dukkan")',
                        type: 'POST',
                        data: {
                            shopProductId: shopProductId,
                            dukkanId: @ViewBag.DukkanId
                        },
                        success: function(response) {
                            if (response.success) {
                                // Remove row with animation
                                $row.fadeOut(400, function() {
                                    $(this).remove();
                                    
                                    // If no rows left, reload page
                                    if ($('tbody tr').length === 0) {
                                        location.reload();
                                    }
                                    
                                    showToast('Success', 'Product removed successfully', 'success');
                                });
                            } else {
                                showToast('Error', response.message || 'Failed to remove product', 'danger');
                                // Re-enable button
                                $removeBtn.prop('disabled', false).html('<i class="fas fa-trash-alt"></i> Remove');
                            }
                        },
                        error: function() {
                            showToast('Error', 'An error occurred while removing the product', 'danger');
                            // Re-enable button
                            $removeBtn.prop('disabled', false).html('<i class="fas fa-trash-alt"></i> Remove');
                        }
                    });
                }
            });
            
            // Helper function to show toast notifications
            function showToast(title, message, type) {
                var $toast = $('<div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true" data-bs-delay="5000">' +
                    '<div class="toast-header bg-' + type + ' text-white">' +
                    '<strong class="me-auto">' + title + '</strong>' +
                    '<button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>' +
                    '</div>' +
                    '<div class="toast-body">' + message + '</div>' +
                    '</div>');
                
                var $container = $('.toast-container');
                if ($container.length === 0) {
                    $container = $('<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 5000;"></div>');
                    $('body').append($container);
                }
                
                $container.append($toast);
                $toast.toast('show');
                
                // Alternative simple alert if Bootstrap toast doesn't work
                console.log(title + ': ' + message);
            }
        });
    </script>
} 