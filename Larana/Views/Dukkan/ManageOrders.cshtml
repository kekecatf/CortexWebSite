@model IEnumerable<Larana.Models.Order>

@{
    ViewBag.Title = "Siparişleri Yönet";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <h4 class="mb-0 flex-grow-1">Siparişleri Yönet</h4>
                    <a href="@Url.Action("DownloadOrdersCSV", "Dukkan", new { id = ViewBag.DukkanId })" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-file-csv"></i> CSV Olarak İndir
                    </a>
                </div>
                <p class="text-muted">Mağazanız için müşteri siparişlerini takip edin ve yönetin</p>
            </div>
        </div>
    </div>
</div>

<!-- Order Filters -->
<div class="row mb-4">
    <div class="col-md-8">
        <div class="input-group">
            <input type="text" id="orderSearch" class="form-control" placeholder="Sipariş ara...">
            <button class="btn btn-outline-secondary" type="button" id="btnClearSearch">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
    <div class="col-md-4">
        <select id="orderFilter" class="form-select">
            <option value="">Tüm Siparişler</option>
            <option value="Pending">Beklemede</option>
            <option value="Processing">İşleniyor</option>
            <option value="Shipped">Gönderildi</option>
            <option value="Delivered">Teslim Edildi</option>
            <option value="Completed">Tamamlandı</option>
            <option value="Cancelled">İptal Edildi</option>
        </select>
    </div>
</div>

<!-- Orders List -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Siparişler</h5>
            </div>
            <div class="card-body p-0">
                @if (Model != null && Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Sipariş #</th>
                                    <th>Tarih</th>
                                    <th>Müşteri</th>
                                    <th>Ürünler</th>
                                    <th>Toplam</th>
                                    <th>Durum</th>
                                    <th style="width: 150px;">İşlemler</th>
                                </tr>
                            </thead>
                            <tbody id="ordersList">
                                @foreach (var order in Model)
                                {
                                    var shopItems = order.OrderDetails.Where(od => od.Product.DukkanId == ViewBag.DukkanId).ToList();
                                    var totalForShop = shopItems.Sum(od => od.Quantity * od.UnitPrice);
                                    var itemsCount = shopItems.Sum(od => od.Quantity);
                                    
                                    <tr class="order-row" data-id="@order.Id" data-status="@order.Status">
                                        <td><strong>#@order.Id</strong></td>
                                        <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                                        <td>@order.User.FirstName @order.User.LastName</td>
                                        <td>@itemsCount ürün</td>
                                        <td>@totalForShop.ToString("0.00") TL</td>
                                        <td>
                                            <span class="badge @(order.Status == "Pending" ? "bg-warning" : 
                                                                 order.Status == "Processing" ? "bg-info" : 
                                                                 order.Status == "Shipped" ? "bg-primary" : 
                                                                 order.Status == "Delivered" ? "bg-success" : 
                                                                 order.Status == "Completed" ? "bg-success" : 
                                                                 "bg-danger")">
                                                @(order.Status == "Pending" ? "Beklemede" : 
                                                  order.Status == "Processing" ? "İşleniyor" : 
                                                  order.Status == "Shipped" ? "Gönderildi" : 
                                                  order.Status == "Delivered" ? "Teslim Edildi" : 
                                                  order.Status == "Completed" ? "Tamamlandı" : 
                                                  order.Status == "Cancelled" ? "İptal Edildi" : order.Status)
                                            </span>
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button type="button" class="btn btn-outline-primary view-order-btn" data-id="@order.Id">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button type="button" class="btn btn-outline-primary update-status-btn" data-id="@order.Id" data-status="@order.Status">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <a href="#" class="btn btn-outline-secondary" onclick="printInvoice(@order.Id)">
                                                    <i class="fas fa-file-invoice"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <div class="mb-3">
                            <i class="fas fa-shopping-cart fa-4x text-muted"></i>
                        </div>
                        <h5>Henüz Sipariş Yok</h5>
                        <p class="text-muted">Mağazanız henüz hiç sipariş almadı.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- View Order Details Modal -->
<div class="modal fade" id="viewOrderModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Sipariş Detayları - #<span id="orderIdDisplay"></span></h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-4">
                    <div class="col-md-6">
                        <h6>Müşteri Bilgileri</h6>
                        <p id="customerInfo">Yükleniyor...</p>
                    </div>
                    <div class="col-md-6">
                        <h6>Sipariş Bilgileri</h6>
                        <p id="orderInfo">Yükleniyor...</p>
                    </div>
                </div>
                
                <h6>Ürünler</h6>
                <div class="table-responsive">
                    <table class="table table-sm table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>Ürün</th>
                                <th>Birim Fiyatı</th>
                                <th>Miktar</th>
                                <th>Toplam</th>
                            </tr>
                        </thead>
                        <tbody id="orderItemsList">
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="3" class="text-end">Ara Toplam:</th>
                                <th id="orderSubtotal">0.00 TL</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <div class="dropstart d-inline-block">
                    <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
                        Durumu Güncelle
                    </button>
                    <ul class="dropdown-menu" id="statusDropdown">
                        <li><a class="dropdown-item status-option" href="#" data-status="Pending">Beklemede</a></li>
                        <li><a class="dropdown-item status-option" href="#" data-status="Processing">İşleniyor</a></li>
                        <li><a class="dropdown-item status-option" href="#" data-status="Shipped">Gönderildi</a></li>
                        <li><a class="dropdown-item status-option" href="#" data-status="Delivered">Teslim Edildi</a></li>
                        <li><a class="dropdown-item status-option" href="#" data-status="Completed">Tamamlandı</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item status-option" href="#" data-status="Cancelled">İptal Edildi</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Sipariş Durumunu Güncelle</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="updateOrderId">
                <div class="form-group mb-3">
                    <label for="orderStatus" class="form-label">Durum</label>
                    <select id="orderStatus" class="form-select">
                        <option value="Pending">Beklemede</option>
                        <option value="Processing">İşleniyor</option>
                        <option value="Shipped">Gönderildi</option>
                        <option value="Delivered">Teslim Edildi</option>
                        <option value="Completed">Tamamlandı</option>
                        <option value="Cancelled">İptal Edildi</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" id="confirmUpdateStatus">Durumu Güncelle</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#orderSearch').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('#ordersList tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });
            
            // Clear search
            $('#btnClearSearch').click(function() {
                $('#orderSearch').val('').trigger('keyup');
            });
            
            // Filter by status
            $('#orderFilter').change(function() {
                var status = $(this).val();
                
                if (status === '') {
                    $('.order-row').show();
                } else {
                    $('.order-row').each(function() {
                        $(this).toggle($(this).data('status') === status);
                    });
                }
            });
            
            // View Order Details
            $('.view-order-btn').click(function() {
                var orderId = $(this).data('id');
                
                // Reset modal content
                $('#orderIdDisplay').text(orderId);
                $('#customerInfo').text('Yükleniyor...');
                $('#orderInfo').text('Yükleniyor...');
                $('#orderItemsList').empty();
                $('#orderSubtotal').text('0.00 TL');
                
                // Show the modal
                var viewOrderModal = new bootstrap.Modal(document.getElementById('viewOrderModal'));
                viewOrderModal.show();
                
                // Fetch order details via AJAX
                $.ajax({
                    url: '@Url.Action("GetOrderDetails", "Dukkan")',
                    type: 'GET',
                    data: {
                        orderId: orderId,
                        dukkanId: @ViewBag.DukkanId
                    },
                    success: function(response) {
                        if (response.success) {
                            // Populate customer info
                            $('#customerInfo').html(
                                '<strong>İsim:</strong> ' + response.order.customerName + '<br>' +
                                '<strong>E-posta:</strong> ' + response.order.customerEmail + '<br>' +
                                '<strong>Telefon:</strong> ' + response.order.customerPhone
                            );
                            
                            // Populate order info
                            $('#orderInfo').html(
                                '<strong>Sipariş Tarihi:</strong> ' + response.order.orderDate + '<br>' +
                                '<strong>Durum:</strong> <span class="badge ' + getStatusBadgeClass(response.order.status) + '">' + 
                                (response.order.status == "Pending" ? "Beklemede" : 
                                 response.order.status == "Processing" ? "İşleniyor" : 
                                 response.order.status == "Shipped" ? "Gönderildi" : 
                                 response.order.status == "Delivered" ? "Teslim Edildi" : 
                                 response.order.status == "Completed" ? "Tamamlandı" : 
                                 response.order.status == "Cancelled" ? "İptal Edildi" : response.order.status) + 
                                '</span><br>' +
                                '<strong>Ödeme Yöntemi:</strong> ' + response.order.paymentMethod
                            );
                            
                            // Populate items
                            var items = response.order.items;
                            var subtotal = 0;
                            
                            $.each(items, function(i, item) {
                                var total = item.quantity * item.unitPrice;
                                subtotal += total;
                                
                                $('#orderItemsList').append(
                                    '<tr>' +
                                    '<td>' + item.productName + '</td>' +
                                    '<td>' + item.unitPrice.toFixed(2) + ' TL</td>' +
                                    '<td>' + item.quantity + '</td>' +
                                    '<td>' + total.toFixed(2) + ' TL</td>' +
                                    '</tr>'
                                );
                            });
                            
                            $('#orderSubtotal').text(subtotal.toFixed(2) + ' TL');
                        } else {
                            $('#customerInfo').html('<div class="alert alert-danger">Sipariş detayları yüklenirken hata oluştu</div>');
                        }
                    },
                    error: function() {
                        $('#customerInfo').html('<div class="alert alert-danger">Sipariş detayları yüklenirken hata oluştu</div>');
                    }
                });
            });
            
            // Update Status Button
            $('.update-status-btn').click(function() {
                var orderId = $(this).data('id');
                var status = $(this).data('status');
                
                $('#updateOrderId').val(orderId);
                $('#orderStatus').val(status);
                
                var updateStatusModal = new bootstrap.Modal(document.getElementById('updateStatusModal'));
                updateStatusModal.show();
            });
            
            // Update Status from Detail Modal
            $('.status-option').click(function(e) {
                e.preventDefault();
                
                var orderId = $('#orderIdDisplay').text();
                var newStatus = $(this).data('status');
                
                updateOrderStatus(orderId, newStatus);
                
                // Close the detail modal
                bootstrap.Modal.getInstance(document.getElementById('viewOrderModal')).hide();
            });
            
            // Confirm Status Update
            $('#confirmUpdateStatus').click(function() {
                var orderId = $('#updateOrderId').val();
                var newStatus = $('#orderStatus').val();
                
                updateOrderStatus(orderId, newStatus);
                
                // Close the update modal
                bootstrap.Modal.getInstance(document.getElementById('updateStatusModal')).hide();
            });
            
            // Helper function to update order status
            function updateOrderStatus(orderId, newStatus) {
                $.ajax({
                    url: '@Url.Action("UpdateOrderStatus", "Dukkan")',
                    type: 'POST',
                    data: {
                        orderId: orderId,
                        status: newStatus,
                        dukkanId: @ViewBag.DukkanId
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update the row in the table
                            var row = $('tr[data-id="' + orderId + '"]');
                            row.data('status', newStatus);
                            
                            // Update the badge
                            var badgeClass = getStatusBadgeClass(newStatus);
                            var statusText = newStatus == "Pending" ? "Beklemede" : 
                                           newStatus == "Processing" ? "İşleniyor" : 
                                           newStatus == "Shipped" ? "Gönderildi" : 
                                           newStatus == "Delivered" ? "Teslim Edildi" : 
                                           newStatus == "Completed" ? "Tamamlandı" : 
                                           newStatus == "Cancelled" ? "İptal Edildi" : newStatus;
                            
                            row.find('td:eq(5) .badge')
                                .removeClass()
                                .addClass('badge ' + badgeClass)
                                .text(statusText);
                            
                            showToast('Başarılı', 'Sipariş durumu başarıyla güncellendi', 'success');
                        } else {
                            showToast('Hata', 'Sipariş durumu güncellenirken hata oluştu', 'error');
                        }
                    },
                    error: function() {
                        showToast('Hata', 'Sipariş durumu güncellenirken bir hata oluştu', 'error');
                    }
                });
            }
            
            // Helper function to get badge class for status
            function getStatusBadgeClass(status) {
                switch(status) {
                    case 'Pending': return 'bg-warning';
                    case 'Processing': return 'bg-info';
                    case 'Shipped': return 'bg-primary';
                    case 'Delivered': 
                    case 'Completed': return 'bg-success';
                    case 'Cancelled': 
                    default: return 'bg-danger';
                }
            }
            
            // Toast notification helper
            function showToast(title, message, type) {
                // You can implement a toast notification here
                alert(title + ': ' + message);
            }
        });
        
        // Function to print invoice (placeholder for now)
        function printInvoice(orderId) {
            // This would typically open a new window or tab with the printable invoice
            alert('Sipariş #' + orderId + ' için fatura yazdırma burada uygulanacaktır.');
        }
    </script>
} 