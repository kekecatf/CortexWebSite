@model Larana.Models.Dukkan

@{
    ViewBag.Title = "Shop Analytics";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <h4 class="mb-0 flex-grow-1">Shop Analytics</h4>
                    <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-outline-primary" id="timeframe-30days">30 Days</button>
                        <button type="button" class="btn btn-sm btn-outline-primary active" id="timeframe-6months">6 Months</button>
                        <button type="button" class="btn btn-sm btn-outline-primary" id="timeframe-1year">1 Year</button>
                    </div>
                </div>
                <p class="text-muted">Track your shop's performance and identify growth opportunities</p>
            </div>
        </div>
    </div>
</div>

<!-- Revenue Chart -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Revenue Overview</h5>
            </div>
            <div class="card-body">
                <canvas id="revenueChart" height="300"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Performance Metrics -->
<div class="row mb-4">
    <div class="col-md-3 mb-3">
        <div class="card h-100">
            <div class="card-body text-center">
                <h6 class="text-muted text-uppercase">Total Orders</h6>
                <h3 class="mb-0">@ViewBag.TotalOrders</h3>
                <div class="small text-success mt-2">
                    <i class="fas fa-arrow-up"></i> 15% increase
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3">
        <div class="card h-100">
            <div class="card-body text-center">
                <h6 class="text-muted text-uppercase">Revenue</h6>
                <h3 class="mb-0">$@ViewBag.TotalRevenue.ToString("0.00")</h3>
                <div class="small text-success mt-2">
                    <i class="fas fa-arrow-up"></i> 8% increase
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3">
        <div class="card h-100">
            <div class="card-body text-center">
                <h6 class="text-muted text-uppercase">Avg. Order Value</h6>
                @{ 
                    decimal avgOrderValue = ViewBag.TotalOrders > 0 ? ViewBag.TotalRevenue / ViewBag.TotalOrders : 0;
                }
                <h3 class="mb-0">$@avgOrderValue.ToString("0.00")</h3>
                <div class="small text-danger mt-2">
                    <i class="fas fa-arrow-down"></i> 3% decrease
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3">
        <div class="card h-100">
            <div class="card-body text-center">
                <h6 class="text-muted text-uppercase">Conversion Rate</h6>
                <h3 class="mb-0">5.2%</h3>
                <div class="small text-success mt-2">
                    <i class="fas fa-arrow-up"></i> 0.8% increase
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Top Products and Order Status -->
<div class="row">
    <!-- Best Selling Products -->
    <div class="col-md-7 mb-4">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Best Selling Products</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 60px;">Image</th>
                                <th>Product</th>
                                <th class="text-end">Units Sold</th>
                                <th class="text-end">Revenue</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.BestSellingProducts != null && ViewBag.BestSellingProducts.Count > 0)
                            {
                                foreach (var product in ViewBag.BestSellingProducts)
                                {
                                    <tr>
                                        <td>
                                            <img src="@(string.IsNullOrEmpty(product.Product.PhotoPath) ? "/Content/Images/placeholder-product.png" : product.Product.PhotoPath)" 
                                                 alt="@product.Product.Name" 
                                                 class="img-thumbnail" 
                                                 style="width: 40px; height: 40px; object-fit: cover;">
                                        </td>
                                        <td>@product.Product.Name</td>
                                        <td class="text-end">@product.TotalSold</td>
                                        <td class="text-end">$@product.Revenue.ToString("0.00")</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center py-3">No sales data available yet</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Order Status Distribution -->
    <div class="col-md-5 mb-4">
        <div class="card h-100">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Order Status</h5>
            </div>
            <div class="card-body">
                <canvas id="orderStatusChart" height="240"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            // Revenue Chart
            var ctx = document.getElementById('revenueChart').getContext('2d');
            var revenueChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [@Html.Raw(string.Join(",", ViewBag.ChartMonths.Select(m => "'" + m + "'")))],
                    datasets: [{
                        label: 'Revenue',
                        data: [@string.Join(",", ViewBag.ChartRevenue)],
                        backgroundColor: 'rgba(13, 110, 253, 0.1)',
                        borderColor: 'rgba(13, 110, 253, 1)',
                        borderWidth: 2,
                        tension: 0.2,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return '$' + context.raw.toFixed(2);
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '$' + value;
                                }
                            }
                        }
                    }
                }
            });
            
            // Order Status Chart
            var orderStatusData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.OrderStatusSummary));
            var labels = [];
            var values = [];
            var backgroundColors = [];
            
            $.each(orderStatusData, function(i, item) {
                labels.push(item.Status);
                values.push(item.Count);
                
                // Assign colors based on status
                switch(item.Status) {
                    case 'Pending': backgroundColors.push('#ffc107'); break;
                    case 'Processing': backgroundColors.push('#17a2b8'); break;
                    case 'Shipped': backgroundColors.push('#0d6efd'); break;
                    case 'Delivered': backgroundColors.push('#198754'); break;
                    case 'Completed': backgroundColors.push('#20c997'); break;
                    case 'Cancelled': backgroundColors.push('#dc3545'); break;
                    default: backgroundColors.push('#6c757d'); break;
                }
            });
            
            var ctxStatus = document.getElementById('orderStatusChart').getContext('2d');
            var statusChart = new Chart(ctxStatus, {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        data: values,
                        backgroundColor: backgroundColors,
                        hoverOffset: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });
            
            // Timeframe buttons
            $('#timeframe-30days, #timeframe-6months, #timeframe-1year').click(function() {
                // Remove active class from all buttons
                $(this).parent().find('.btn').removeClass('active');
                // Add active class to clicked button
                $(this).addClass('active');
                
                // Here you would fetch new data based on the selected timeframe
                // For now, we'll just simulate it with an alert
                alert('In a real implementation, this would refresh the data for the selected timeframe: ' + 
                      $(this).text());
            });
        });
    </script>
} 