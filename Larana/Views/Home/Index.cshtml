@{
    ViewBag.Title = "Ana Sayfa";
}

@section meta {
    <meta name="description" content="Larana - Yerel satıcılardan en iyisini keşfedin. Pazaryeri topluluğumuzdan benzersiz ürünler bulun.">
    <meta property="og:title" content="Larana - Pazaryeri">
    <meta property="og:description" content="Yerel satıcılardan en iyisini keşfedin. Pazaryeri topluluğumuzdan benzersiz ürünler bulun.">
}

<!-- Hero Banner Section -->
<section id="hero-banner">
    <div class="hero-content">
        <h1>Yerel Satıcılardan En İyisini Keşfedin</h1>
        <p>Satıcı topluluğumuzdan benzersiz ürünleri keşfedin</p>
        <div class="hero-buttons">
            <a href="@Url.Action("Index", "Dukkan")" class="btn btn-primary btn-lg">Mağazaları Keşfet</a>
            <a href="@Url.Action("Index", "Shop")" class="btn btn-outline-light btn-lg">Ürünlere Göz At</a>
        </div>
    </div>
</section>

<!-- Search Section -->
<section id="search-section" class="container mt-n5">
    <div class="search-container">
        <div class="card shadow">
            <div class="card-body">
                <form action="@Url.Action("Search", "Shop")" method="get" class="search-form">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <select name="searchType" class="form-control search-type">
                                <option value="products">Ürünler</option>
                                <option value="shops">Mağazalar</option>
                            </select>
                        </div>
                        <input type="text" name="q" class="form-control" placeholder="Bugün ne arıyorsunuz?" aria-label="Ara" required>
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i> Ara
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Carousel/Promo Slider Section -->
<section id="carousel-section" class="container mt-5">
    <div id="promoCarousel" class="carousel slide shadow" data-bs-ride="carousel">
        <div class="carousel-inner rounded">
            <div class="carousel-item active">
                <div class="promo-slide slide-1">
                    <div class="carousel-caption">
                        <h2>Sınırlı Süreli Teklifler</h2>
                        <p>En iyi satıcılardan özel fırsatlarımıza göz atın</p>
                        <a href="@Url.Action("Index", "Shop", new { category = "featured" })" class="btn btn-outline-light">Hemen Alışveriş Yap</a>
                    </div>
                </div>
            </div>
            <div class="carousel-item">
                <div class="promo-slide slide-2">
                    <div class="carousel-caption">
                        <h2>Satıcı Olun</h2>
                        <p>Pazaryerimize katılın ve bugün ürünlerinizi satmaya başlayın</p>
                        <a href="@Url.Action("BecomeASeller", "Account")" class="btn btn-outline-light">Daha Fazla Bilgi</a>
                    </div>
                </div>
            </div>
            <div class="carousel-item">
                <div class="promo-slide slide-3">
                    <div class="carousel-caption">
                        <h2>Ücretsiz Kargo</h2>
                        <p>50 TL üzeri siparişlerde - Sınırlı süre</p>
                        <a href="@Url.Action("Index", "Shop")" class="btn btn-outline-light">Alışverişe Başla</a>
                    </div>
                </div>
            </div>
        </div>
        <a class="carousel-control-prev" href="#promoCarousel" role="button" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Önceki</span>
        </a>
        <a class="carousel-control-next" href="#promoCarousel" role="button" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Sonraki</span>
        </a>
    </div>
</section>

<!-- Featured Products Section -->
<section id="product-section" class="container mt-5">
    <div class="section-header">
        <h2>Öne Çıkan Ürünler</h2>
        <a href="@Url.Action("Index", "Shop")" class="btn btn-outline-primary btn-sm">Tümünü Gör</a>
    </div>
    <div class="row products-grid">
        @foreach (var product in ViewBag.NewProducts ?? new List<Larana.Models.Product>())
        {
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="product-card">
                    <a href="@Url.Action("Details", "Shop", new { id = product.Id })">
                        <div class="product-img-container">
                            @if (string.IsNullOrEmpty(product.PhotoPath))
                            {
                                <div class="placeholder-img">
                                    <i class="fas fa-image"></i>
                                </div>
                            }
                            else
                            {
                                <img class="product-img" src="@Url.Content("~/" + product.PhotoPath)" alt="@product.Name">
                            }
                        </div>
                        <div class="product-info">
                            <span class="product-brand">@product.Brand</span>
                            <h5 class="product-name">@product.Name</h5>
                            
                            <!-- Product Rating Stars -->
                            <div class="product-rating mb-2">
                                @{ 
                                    decimal avgRating = 0;
                                    int reviewCount = 0;
                                    
                                    if (product.Reviews != null && product.Reviews.Count > 0) 
                                    {
                                        var reviewsList = product.Reviews;
                                        reviewCount = reviewsList.Count;
                                        var validReviews = new List<Larana.Models.Review>();
                                        foreach (var review in reviewsList)
                                        {
                                            if (review != null)
                                            {
                                                validReviews.Add(review);
                                            }
                                        }
                                        int sum = 0;
                                        foreach (var r in validReviews)
                                        {
                                            sum += r.Rating;
                                        }
                                        avgRating = reviewCount > 0 ? Math.Round((decimal)sum / reviewCount, 1) : 0;
                                    }
                                }
                                
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= Math.Floor(avgRating))
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    else if ((decimal)(i - 0.5) <= avgRating)
                                    {
                                        <i class="fas fa-star-half-alt text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                }
                                @if (reviewCount > 0)
                                {
                                    <span class="rating-count">@avgRating.ToString("0.0") (@reviewCount)</span>
                                }
                            </div>
                            
                            <div class="product-price">@string.Format("{0:N2} TL", product.Price)</div>
                        </div>
                    </a>
                </div>
            </div>
        }
    </div>
</section>

<!-- Best Sellers Section -->
<section id="best-sellers-section" class="container mt-5 mb-5">
    <div class="section-header">
        <h2>En Çok Satanlar</h2>
        <a href="@Url.Action("Index", "Shop", new { sort = "popular" })" class="btn btn-outline-primary btn-sm">Tümünü Gör</a>
    </div>
    <div class="row products-grid">
        @foreach (var product in ViewBag.BestSellers ?? new List<Larana.Models.Product>())
        {
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="product-card">
                    <a href="@Url.Action("Details", "Shop", new { id = product.Id })">
                        <div class="product-img-container">
                            @if (string.IsNullOrEmpty(product.PhotoPath))
                            {
                                <div class="placeholder-img">
                                    <i class="fas fa-image"></i>
                                </div>
                            }
                            else
                            {
                                <img class="product-img" src="@Url.Content("~/" + product.PhotoPath)" alt="@product.Name">
                            }
                        </div>
                        <div class="product-info">
                            <span class="product-brand">@product.Brand</span>
                            <h5 class="product-name">@product.Name</h5>
                            
                            <!-- Product Rating Stars -->
                            <div class="product-rating mb-2">
                                @{ 
                                    decimal avgRating = 0;
                                    int reviewCount = 0;
                                    
                                    if (product.Reviews != null && product.Reviews.Count > 0) 
                                    {
                                        var reviewsList = product.Reviews;
                                        reviewCount = reviewsList.Count;
                                        var validReviews = new List<Larana.Models.Review>();
                                        foreach (var review in reviewsList)
                                        {
                                            if (review != null)
                                            {
                                                validReviews.Add(review);
                                            }
                                        }
                                        int sum = 0;
                                        foreach (var r in validReviews)
                                        {
                                            sum += r.Rating;
                                        }
                                        avgRating = reviewCount > 0 ? Math.Round((decimal)sum / reviewCount, 1) : 0;
                                    }
                                }
                                
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= Math.Floor(avgRating))
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    else if ((decimal)(i - 0.5) <= avgRating)
                                    {
                                        <i class="fas fa-star-half-alt text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                }
                                @if (reviewCount > 0)
                                {
                                    <span class="rating-count">@avgRating.ToString("0.0") (@reviewCount)</span>
                                }
                            </div>
                            
                            <div class="product-price">@string.Format("{0:N2} TL", product.Price)</div>
                        </div>
                    </a>
                </div>
            </div>
        }
    </div>
</section>

<!-- Popular Shops Section -->
<section id="popular-shops-section" class="container mt-5 mb-5 pb-4">
    <div class="section-header">
        <h2>🏆 Popüler Mağazalar</h2>
        <a href="@Url.Action("Index", "Dukkan")" class="btn btn-outline-primary btn-sm">Tüm Mağazaları Gör</a>
    </div>
    
    @if (ViewBag.PopularShops == null || !(ViewBag.PopularShops as IEnumerable<Larana.Models.Dukkan>).Any())
    {
        <div class="alert alert-info">
            <p class="mb-0">Henüz mağaza bulunmuyor. <a href="@Url.Action("BecomeASeller", "Account")">Satıcı olun</a> ve ilk siz olun!</p>
        </div>
    }
    else
    {
        <!-- Debug info -->
        <div class="alert alert-info mb-4">
            <p class="mb-0">@((ViewBag.PopularShops as IEnumerable<Larana.Models.Dukkan>).Count()) mağaza gösteriliyor</p>
        </div>
        <div id="shopsCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @{
                    var shopList = ViewBag.PopularShops as IEnumerable<Larana.Models.Dukkan>;
                    if (shopList == null) { 
                        shopList = new List<Larana.Models.Dukkan>();
                    }
                    var shopGroups = shopList.Select((shop, index) => new { shop, index })
                                            .GroupBy(x => x.index / 4)
                                            .Select(g => g.Select(x => x.shop).ToList())
                                            .ToList();
                }
                
                @for (int i = 0; i < shopGroups.Count; i++)
                {
                    <div class="carousel-item @(i == 0 ? "active" : "")">
                        <div class="row">
                            @foreach (var shop in shopGroups[i])
                            {
                                <div class="col-lg-3 col-md-3 col-sm-6 mb-4">
                                    <div class="shop-card h-100">
                                        <div class="card">
                                            <div class="shop-logo-wrapper">
                                                @if (string.IsNullOrEmpty(shop.LogoPath))
                                                {
                                                    <div class="placeholder-img shop-logo-placeholder">
                                                        <i class="fas fa-store"></i>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <img src="@Url.Content("~/" + shop.LogoPath)" class="card-img-top shop-logo" alt="@shop.Name">
                                                }
                                            </div>
                                            <div class="card-body">
                                                <h5 class="card-title text-center">@shop.Name</h5>
                                                <div class="shop-rating text-center mb-3">
                                                    @for (int j = 1; j <= 5; j++)
                                                    {
                                                        if (j <= Math.Floor(shop.Rating))
                                                        {
                                                            <i class="fas fa-star text-warning"></i>
                                                        }
                                                        else if ((decimal)(j - 0.5) <= shop.Rating)
                                                        {
                                                            <i class="fas fa-star-half-alt text-warning"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="far fa-star text-warning"></i>
                                                        }
                                                    }
                                                    <span class="rating-value ml-1">@shop.Rating.ToString("0.0")</span>
                                                </div>
                                                <div class="text-center">
                                                    <a href="@Url.Action("Details", "Dukkan", new { id = shop.Id })" class="btn btn-primary">
                                                        <i class="fas fa-store mr-1"></i> Mağazayı Ziyaret Et
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            @if (shopGroups.Count > 1)
            {
                <a class="carousel-control-prev shop-carousel-control" href="#shopsCarousel" role="button" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Önceki</span>
                </a>
                <a class="carousel-control-next shop-carousel-control" href="#shopsCarousel" role="button" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Sonraki</span>
                </a>
                
                <ol class="carousel-indicators shop-indicators">
                    @for (int i = 0; i < shopGroups.Count; i++)
                    {
                        <li data-bs-target="#shopsCarousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
                    }
                </ol>
            }
        </div>
    }
</section>

<style>
    /* Hero Banner Styles */
    #hero-banner {
        background: linear-gradient(to right, #0062E6, #33AEFF);
        background-size: cover;
        background-position: center;
        color: white;
        height: 500px;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        position: relative;
    }

    .hero-content {
        max-width: 800px;
        padding: 20px;
        z-index: 2;
    }

    .hero-content h1 {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 1rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }

    .hero-content p {
        font-size: 1.5rem;
        margin-bottom: 2rem;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    }

    .hero-buttons .btn {
        margin: 0 10px;
        padding: 10px 25px;
        border-radius: 30px;
        font-weight: 600;
    }

    /* Search Section Styles */
    #search-section {
        position: relative;
        z-index: 10;
    }

    .search-container {
        margin-top: -50px;
    }

    .search-container .card {
        border-radius: 10px;
        border: none;
    }

    .search-form {
        padding: 10px;
    }

    .search-type {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        width: 120px;
    }

    /* Carousel/Promo Section Styles */
    #carousel-section .carousel {
        border-radius: 10px;
        overflow: hidden;
    }

    .promo-slide {
        height: 300px;
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .slide-1 {
        background: linear-gradient(to right, #FF512F, #DD2476);
    }

    .slide-2 {
        background: linear-gradient(to right, #4A00E0, #8E2DE2);
    }

    .slide-3 {
        background: linear-gradient(to right, #11998e, #38ef7d);
    }

    .carousel-caption {
        bottom: auto;
        top: 50%;
        transform: translateY(-50%);
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
    }

    /* Product Sections Styles */
    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 1px solid #eee;
        padding-bottom: 10px;
    }

    .products-grid {
        margin: 0 -10px;
    }

    .product-card {
        border: 1px solid #eee;
        border-radius: 8px;
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .product-img-container {
        height: 200px;
        overflow: hidden;
        background: #f9f9f9;
    }

    .placeholder-img {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #ccc;
        background: #f0f0f0;
    }

    .placeholder-img i {
        font-size: 3rem;
    }

    .product-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-img {
        transform: scale(1.05);
    }

    .product-info {
        padding: 15px;
        background: white;
    }

    .product-brand {
        display: block;
        color: #777;
        font-size: 0.9rem;
        margin-bottom: 5px;
    }

    .product-name {
        font-weight: 600;
        margin-bottom: 10px;
        height: 40px;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .product-price {
        font-weight: 700;
        color: #007bff;
        font-size: 1.1rem;
    }

    /* Product rating styles */
    .product-rating {
        font-size: 0.9rem;
        display: flex;
        align-items: center;
    }
    
    .product-rating i {
        color: #ffc107;
        margin-right: 2px;
    }
    
    .rating-count {
        color: #666;
        font-size: 0.8rem;
        margin-left: 5px;
    }

    /* Responsive adjustments */
    @@media (max-width: 767px) {
        .hero-content h1 {
            font-size: 2rem;
        }
        
        .hero-content p {
            font-size: 1.2rem;
        }
        
        .hero-buttons .btn {
            margin: 5px;
            display: block;
            width: 100%;
        }
        
        .promo-slide {
            height: 200px;
        }
    }
    
    /* Popular Shops section styles */
    .shop-card {
        transition: all 0.3s ease;
    }
    
    .shop-card:hover {
        transform: translateY(-5px);
    }
    
    .shop-card .card {
        border-radius: 10px;
        overflow: hidden;
        border: 1px solid #eee;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }
    
    .shop-logo-wrapper {
        height: 160px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        padding: 20px;
        overflow: hidden;
    }
    
    .shop-logo {
        max-height: 120px;
        max-width: 100%;
        object-fit: contain;
    }
    
    .shop-logo-placeholder {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .shop-logo-placeholder i {
        font-size: 3rem;
        color: #6c757d;
    }
    
    .shop-rating {
        font-size: 1rem;
    }
    
    .rating-value {
        color: #6c757d;
        font-size: 0.9rem;
    }
    
    /* Shop carousel specific styles */
    #shopsCarousel {
        padding: 0 50px;
        margin-bottom: 40px;
    }
    
    .shop-carousel-control {
        width: 5%;
        background-color: rgba(0,0,0,0.2);
        border-radius: 5px;
    }
    
    .shop-carousel-control:hover {
        background-color: rgba(0,0,0,0.4);
    }
    
    .shop-indicators {
        bottom: -30px;
    }
    
    .shop-indicators li {
        background-color: #ccc;
        height: 10px;
        width: 10px;
        border-radius: 50%;
    }
    
    .shop-indicators li.active {
        background-color: #007bff;
    }
    
    .small-control {
        background-color: rgba(0,0,0,0.3);
        width: 10% !important;
    }
    
    @@media (max-width: 767px) {
        #shopsCarousel {
            padding: 0 30px;
        }
        
        .shop-carousel-control {
            width: 8%;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize Bootstrap 5 carousels
            // For Bootstrap 5, we don't need to call .carousel() as they auto-initialize
            
            // Create custom controls for shop carousel in responsive view
            function updateCarouselControls() {
                if ($(window).width() < 768) {
                    $('.shop-carousel-control').addClass('small-control');
                } else {
                    $('.shop-carousel-control').removeClass('small-control');
                }
            }
            
            // Initial call
            updateCarouselControls();
            
            // On window resize
            $(window).resize(function() {
                updateCarouselControls();
            });
            
            // Lazy load images
            const lazyImages = document.querySelectorAll('.product-img, .shop-logo');
            if ('IntersectionObserver' in window) {
                const imageObserver = new IntersectionObserver((entries, observer) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            if (img.dataset.src) {
                                img.src = img.dataset.src;
                                img.removeAttribute('data-src');
                            }
                            imageObserver.unobserve(img);
                        }
                    });
                });
                
                lazyImages.forEach(img => {
                    imageObserver.observe(img);
                });
            }
        });
    </script>
}