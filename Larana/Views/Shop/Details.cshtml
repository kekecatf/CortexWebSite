<div class="product-page">
    <div class="product-left">
        <div class="product-main-image">
            <img src="@Url.Content("~/" + Model.PhotoPath)" alt="@Model.Name">
        </div>
    </div>

    <div class="product-right">
        <h1 class="product-title">@Model.Name</h1>
        <h2 class="product-price">@string.Format("{0:N}", Model.Price) TL</h2>
        <h4 class="product-brand">Brand: @Model.Brand</h4>
        <h4 class="product-category">Category: @Model.Category</h4>
        <div class="product-seller">
            <h4>Seller: 
                @if (Model.Dukkan != null)
                {
                    <a href="@Url.Action("Details", "Dukkan", new { id = Model.DukkanId })" class="seller-link">
                        @Model.Dukkan.Name
                    </a>
                }
                else
                {
                    <span>Unknown</span>
                }
            </h4>
        </div>
        <h4 class="product-stock" id="stock-count">Stock: @Model.Stock</h4>

        <div class="product-actions">
            @if (User.Identity.IsAuthenticated)
            {
                <div class="quantity-wrapper">
                    <label for="quantity">Quantity:</label>
                    <div class="quantity-control">
                        <button type="button" class="quantity-btn" id="decrease-quantity">-</button>
                        <input type="number" id="quantity" value="1" min="1" max="@Model.Stock" />
                        <button type="button" class="quantity-btn" id="increase-quantity">+</button>
                    </div>
                </div>
                <button class="btn btn-add-to-cart" id="add-to-cart-btn" onclick="virtualAddToCart(@Model.Id, document.getElementById('quantity').value, @Model.Stock)">Add to Cart</button>
            }
            else
            {
                <button class="btn btn-add-to-cart" disabled>Login to Add to Cart</button>
            }
        </div>

        <div class="product-info-box">
            <h4>Delivery Information</h4>
            <p>Fast delivery options available!</p>
        </div>
    </div>
</div>

<div class="related-products">
    <h3>Related Products</h3>
    <div class="products">
        @foreach (var product in ViewBag.RelatedProducts)
        {
<div class="product">
    <a href="@Url.Action("Details", "Shop", new { id = product.Id })">
        <img class="sneaker" src="@Url.Content("~/" + product.PhotoPath)" alt="@product.Name" />
        <div class="description">
            <h5>@product.Name</h5>
            <h4>@string.Format("{0:N}", product.Price) TL</h4>
            @if (product.Dukkan != null)
            {
                <span class="related-seller">
                    <i class="fas fa-store"></i> @product.Dukkan.Name
                </span>
            }
        </div>
    </a>
</div>}
    </div>
</div>

<script>
    function virtualAddToCart(productId, quantity, initialStock) {
        const stockCountElement = document.getElementById('stock-count');
        const addToCartButton = document.querySelector('.btn-add-to-cart');
        quantity = parseInt(quantity);

        const currentStock = parseInt(stockCountElement.textContent.replace('Stock: ', ''));
        if (currentStock <= 0 || quantity > currentStock) {
            alert("Not enough stock available!");
            return;
        }

        const newStock = currentStock - quantity;
        stockCountElement.textContent = `Stock: ${newStock}`;

        if (newStock <= 0) {
            addToCartButton.disabled = true;
            addToCartButton.textContent = 'Out of Stock';
        }

        $.ajax({
            url: '@Url.Action("AddToCart", "Shop")',
            type: 'POST',
            data: { productId: productId, quantity: quantity },
            success: function (response) {
                if (response.success) {
                    alert(response.message);
                } else {
                    alert(response.message);
                }
            },
            error: function () {
                alert("Failed to add product to cart.");
            }
        });
    }

    // Initialize quantity controls
    $(document).ready(function() {
        const quantityInput = document.getElementById('quantity');
        const increaseBtn = document.getElementById('increase-quantity');
        const decreaseBtn = document.getElementById('decrease-quantity');
        const maxStock = @Model.Stock;
        
        if (increaseBtn && decreaseBtn && quantityInput) {
            increaseBtn.addEventListener('click', function() {
                let value = parseInt(quantityInput.value);
                if (value < maxStock) {
                    quantityInput.value = value + 1;
                }
            });
            
            decreaseBtn.addEventListener('click', function() {
                let value = parseInt(quantityInput.value);
                if (value > 1) {
                    quantityInput.value = value - 1;
                }
            });
            
            quantityInput.addEventListener('change', function() {
                let value = parseInt(this.value);
                if (isNaN(value) || value < 1) {
                    this.value = 1;
                } else if (value > maxStock) {
                    this.value = maxStock;
                }
            });
        }
    });
</script>

<style>
    /* General Page Styling */
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f9f9f9;
        color: #333;
    }

    /* Product Page Styling */
    .product-page {
        display: flex;
        gap: 30px;
        max-width: 1200px;
        margin: 50px auto;
        padding: 30px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .product-left {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .product-main-image img {
        width: 100%;
        max-width: 500px;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .product-right {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .product-title {
        font-size: 32px;
        font-weight: bold;
        color: #333;
    }

    .product-price {
        font-size: 28px;
        font-weight: bold;
        color: #007BFF;
    }

    .product-brand,
    .product-category {
        font-size: 18px;
        color: #555;
    }

    .product-seller h4 {
        font-size: 18px;
        color: #555;
        margin: 0;
    }

    .seller-link {
        color: #007BFF;
        text-decoration: none;
        font-weight: 500;
        transition: color 0.2s;
    }

    .seller-link:hover {
        color: #0056b3;
        text-decoration: underline;
    }

    .product-stock {
        font-size: 18px;
        color: #555;
        margin: 10px 0;
    }
    
    /* Quantity Control Styling */
    .quantity-wrapper {
        margin-bottom: 15px;
    }
    
    .quantity-wrapper label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }
    
    .quantity-control {
        display: flex;
        align-items: center;
        max-width: 150px;
    }
    
    .quantity-control input {
        width: 50px;
        text-align: center;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin: 0 5px;
    }
    
    .quantity-btn {
        width: 32px;
        height: 32px;
        background-color: #f0f0f0;
        border: 1px solid #ddd;
        border-radius: 4px;
        cursor: pointer;
        font-weight: bold;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .quantity-btn:hover {
        background-color: #e0e0e0;
    }

    /* Product Actions */
    .product-actions {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    /* Button Styling */
    .btn-add-to-cart {
        background-color: #007BFF;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
    }

        .btn-add-to-cart:hover {
            background-color: #0056b3;
        }

        .btn-add-to-cart:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

    /* Styling for alertify-like notification */
    .alertify {
        background-color: #f0f0f0;
        color: #333;
        font-size: 16px;
        padding: 10px;
        border-radius: 5px;
        text-align: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin: 10px auto;
        max-width: 400px;
    }

    /* Related Products Section */
    .related-products {
        margin-top: 50px;
        padding: 20px;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

        .related-products h3 {
            font-size: 24px;
            font-weight: bold;
            color: #007BFF;
            margin-bottom: 20px;
        }

        .related-products .products {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
        }

        .related-products .product {
            flex: 1 1 calc(20% - 20px);
            max-width: calc(20% - 20px);
            box-sizing: border-box;
            text-align: left;
            border: 1px solid #007BFF;
            border-radius: 10px;
            padding: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background-color: #fff;
            margin: 10px;
        }

            .related-products .product:hover {
                transform: scale(1.05);
                box-shadow: 0 4px 8px rgba(0, 123, 255, 0.2);
            }

            .related-products .product img {
                width: 100%;
                max-height: 250px;
                object-fit: contain;
                border-radius: 10px;
                margin-bottom: 10px;
            }

        .related-products .description {
            padding: 10px 0;
            text-align: left;
        }

            .related-products .description h5 {
                font-size: 16px;
                color: #333;
                margin: 5px 0;
                font-weight: bold;
            }

            .related-products .description h4 {
                font-size: 18px;
                font-weight: bold;
                color: #007BFF;
                margin-top: 5px;
            }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .related-products .product {
            flex: 1 1 calc(25% - 20px);
            max-width: calc(25% - 20px);
        }
    }

    @@media (max-width: 768px) {
        .product-page {
            flex-direction: column;
        }

        .product-left,
        .product-right {
            flex: 1;
        }

        .product-main-image img {
            max-width: 100%;
        }

        .related-products .product {
            flex: 1 1 calc(50% - 20px);
            max-width: calc(50% - 20px);
        }
    }

    @@media (max-width: 480px) {
        .related-products .product {
            flex: 1 1 calc(100% - 20px);
            max-width: calc(100% - 20px);
        }
    }

    /* Remove underline from all links */
    a {
        text-decoration: none;
        color: inherit;
        cursor: pointer;
    }

    /* Add styles for related-seller */
    .related-seller {
        display: block;
        font-size: 0.85em;
        color: #666;
        margin-top: 5px;
    }

    .related-seller i {
        color: #007BFF;
        margin-right: 4px;
    }
</style>


