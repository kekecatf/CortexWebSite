@model Larana.Models.ProductDetailsViewModel

@{
    ViewBag.Title = Model.Product.Name;
}

<div class="product-details">
    <div class="product-header">
        <h1>@Model.Product.Name</h1>
        <div class="product-meta">
            <span class="brand">@Model.Product.Brand</span>
            <span class="category">@Model.Product.Category</span>
        </div>
    </div>

    <div class="product-content">
        <div class="product-image">
            @if (!string.IsNullOrEmpty(Model.Product.PhotoPath))
            {
                <img src="@Model.Product.PhotoPath" alt="@Model.Product.Name" />
            }
            else
            {
                <img src="/Content/Images/no-image.png" alt="No image available" />
            }
        </div>

        <div class="product-info">
            <div class="description">
                <h3>Description</h3>
                <p>@Model.Product.Description</p>
            </div>

            <div class="store-options">
                <h3>Available at these stores</h3>
                
                @if (Model.StoreOptions != null && Model.StoreOptions.Any())
                {
                    <div class="store-list">
                        @foreach (var option in Model.StoreOptions.OrderBy(o => o.Price))
                        {
                            <div class="store-option @(option.Stock > 0 ? "" : "out-of-stock")">
                                <div class="store-details">
                                    <div class="store-name">@option.StoreName</div>
                                    <div class="price-stock">
                                        <div class="price">@option.Price.ToString("C")</div>
                                        <div class="stock-status @(option.Stock > 0 ? "in-stock" : "out-of-stock")">
                                            @(option.Stock > 0 ? $"In Stock ({option.Stock})" : "Out of Stock")
                                        </div>
                                    </div>
                                    <div class="delivery-options">
                                        @if (option.IsClickAndCollect)
                                        {
                                            <div class="click-collect">
                                                <i class="fas fa-store"></i>
                                                <span>Click & Collect</span>
                                            </div>
                                        }
                                        <div class="delivery">
                                            <i class="fas fa-truck"></i>
                                            <span>Delivery</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="actions">
                                    @if (option.Stock > 0)
                                    {
                                        <button class="btn btn-primary add-to-cart" 
                                                data-product-id="@option.ProductId"
                                                data-shop-product-id="@option.ShopProductId"
                                                data-store-id="@option.StoreId">
                                            <i class="fas fa-shopping-cart"></i>
                                            Add to Cart
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary" disabled>
                                            <i class="fas fa-ban"></i>
                                            Out of Stock
                                        </button>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>This product is currently not available at any stores.</p>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .product-details {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .product-header {
        margin-bottom: 2rem;
    }

    .product-header h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        color: #333;
    }

    .product-meta {
        display: flex;
        gap: 1rem;
        color: #666;
    }

    .product-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }

    .product-image img {
        width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .product-info {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .description {
        margin-top: 1rem;
    }

    .description h3 {
        font-size: 1.2rem;
        margin-bottom: 0.5rem;
        color: #333;
    }

    .description p {
        color: #666;
        line-height: 1.6;
    }

    .store-options {
        margin-top: 2rem;
    }

    .store-options h3 {
        font-size: 1.2rem;
        margin-bottom: 1rem;
        color: #333;
    }

    .store-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .store-option {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .store-option:hover {
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .store-option.out-of-stock {
        opacity: 0.7;
    }

    .store-details {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .store-name {
        font-weight: 600;
        font-size: 1.1rem;
        color: #2c3e50;
    }

    .price-stock {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .price {
        font-size: 1.4rem;
        font-weight: 500;
        color: #2c3e50;
    }

    .stock-status {
        padding: 0.25rem 0.75rem;
        border-radius: 4px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .in-stock {
        background-color: #e8f5e9;
        color: #2e7d32;
    }

    .out-of-stock {
        background-color: #ffebee;
        color: #c62828;
    }

    .delivery-options {
        display: flex;
        gap: 1rem;
    }

    .click-collect, .delivery {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.85rem;
        color: #555;
    }

    .click-collect i, .delivery i {
        color: #2196f3;
    }

    .actions {
        min-width: 120px;
    }

    .btn {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        border-radius: 4px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

    .btn-primary {
        background-color: #2196f3;
        border-color: #2196f3;
        color: white;
    }

    .btn-primary:hover {
        background-color: #1976d2;
    }

    .btn-secondary {
        background-color: #9e9e9e;
        border-color: #9e9e9e;
        color: white;
    }
</style>

@section scripts {
    <script>
        $(document).ready(function () {
            $('.add-to-cart').click(function () {
                var productId = $(this).data('product-id');
                var shopProductId = $(this).data('shop-product-id');
                var storeId = $(this).data('store-id');
                
                // Use the shopProductId if available (for store variants), otherwise use just the productId
                var dataToSend = {
                    productId: productId,
                    quantity: 1
                };
                
                // If it's a shop product variant, add that information
                if (shopProductId) {
                    dataToSend.shopProductId = shopProductId;
                    dataToSend.storeId = storeId;
                }
                
                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    data: dataToSend,
                    success: function (response) {
                        if (response.success) {
                            alert('Product added to cart!');
                            // Update cart count if needed
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while adding the product to cart.');
                    }
                });
            });
        });
    </script>
} 